The add_integer module
======================

Using ``add_integer``
-------------------

import the model
    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:
 
Adding two integers returns the sum of the two integers.
    >>> add_integer(9, 1)
    10
    
    >>> add_integer(1, -6)
    -5

Adding two floats returns the sum of the two floats.
    >>> add_integer(2.9, 3.4)
    5

    >>> add_integer(-2.9, 3.4)
    1

Adding Floating and non-floating point numbers.
    >>> add_integer(2.7, -3)
    -1

The second argument is optional - by default, it is 98.
    >>> add_integer(2)
    100

Non-Numbers
===========

``add_integer()`` expects that both arguments are either integers or floats.
If either argument is a non-integer and non-float, a TypeError is raised:
    >>> add_integer("alx", 9)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2, "alx")
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(2.3, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

If both arguments are non-integers and non-floats, a TypeError message is only
printed for the first argument.
    >>> add_integer("hello", "there")
    Traceback (most recent call last):
    TypeError: a must be an integer

The function will fail if a is not provided 
    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() missing 1 required positional argument: 'a'

The function will fail if infinity is provided.
    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
    
    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

he function will fail if Nan is provided.
    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
